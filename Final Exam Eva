#Exercise 1:
import math
from math import e

#exact value
def f(x):
    return math.log(x, e)


#interpolation
def interpolation(x, x0, x1, x2):
    b0 = f(x0)
    b1 = (f(x1) - f(x0))/(x1 - x0)
    b2 = (((f(x2) - f(x1))/(x2 - x1)) - ((f(x1)- b0))/(x1 - x0))/(x2 - x0)
    a0 = b0 - b1*x0 + (b2*x0)*x1
    a1 = b1 - b2*x0 - b2*x1
    a2 = b2
    fx = a0 +a1*x + a2*x**2
          
    return fx
               
interpolation(2., 1., 4., 6.)




#ln2=0.69315
#To interpolate the value of f for ln2 we know it is between the points x0 and x1 (f(x0)=0, f(x1)=1.386294)





#Exercise 2
#finding root of an equation, in this case (e^x - x = 0) using bisection method

import numpy as np
from math import e

def f(x):
    return e**x - x

def bisect(xu, xl):
    if f(xu) * f(xl) > 0:
        return print("Bad guess.")
    else:
        for i in range(10):
            xn = (xu + xl)/2
            value = f(xn)
            if f(xl) * value < 0:
                xu = xn
            elif f(xu) * value < 0:
                xl = xn
            else:
                return xn
        return xn
    

bisect(-5., 2.)


#The guess will never be right because the equation given has no real solution and no root (e**x - x) will never cross with x=0.

